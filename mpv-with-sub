#!/bin/bash

# mpv supports three subtitle options (exact, fuzzy, all)
# this is for a file with episodes like S01E01, E01, Series.1.Part.1

# filename = S01E01             subname = S01E01
#            S01.E01                      E01
# filename = E01                subname = E01
#                                         S01E01
# filename = Series.1.Part.1    subname = Series.1.Part.1
#                                         E01

if [[ ! -e "$1" ]] ; then
    printf "\n\n required first argument as file \n\n"
    exit 1
fi

match=0
filename="${1##*/}"
printf "\n\n filename is $filename \n\n"
filedir="${1%$filename}"
filename=$(awk '{print tolower($0)}' <<< $filename)

ep=$(expr "$filename" : ".*\(s[0-9]\+\.\?e[0-9]\+\).*") || \
    ep=$(expr "$filename" : ".*\(e[0-9]\+\).*") || \
    ep=$(expr "$filename" : ".*\(series\.\?[0-9]\+\.\?part\.\?[0-9]\+\).*")

subext=".*\.(srt|smi|ass|sub)$"

printf "\n\n episode is $ep \n\n"

if [[ -n "$filedir" ]] ; then
  cd "$filedir"
fi

# for recursive directories
# probably need -2 deep level, otherwise so many files checked
shopt -s globstar
for file in **/* ; do
    originfile="$file"
    file=$(awk '{print tolower($0)}' <<< $file)
    if [[ "$file" =~ $ep && "$file" =~ $subext ]] ; then
        if [[ -z $subtitles1 ]] ; then
            subtitles1="$originfile"
        else
            subtitles1=$subtitles1:"$originfile"
        fi
        printf "\n\n subtitles1 is $subtitles1 \n\n"
        # break
    elif [[ "$file" =~ e0*"${ep#*e}" && "$file" =~ $subext ]] ; then
        if [[ -z $subtitles2 ]] ; then
            subtitles2="$originfile"
        else
            subtitles2=$subtitles2:"$originfile"
        fi
        printf "\n\n subtitles2 is $subtitles2 \n\n"
        # break
    elif [[ "$file" =~ e0*"${ep#*part\.}" && "$file" =~ $subext ]] ; then
        if [[ -z $subtitles3 ]] ; then
            subtitles3="$originfile"
        else
            subtitles3=$subtitles3:"$originfile"
        fi
        printf "\n\n subtitles3 is $subtitles3 \n\n"
        # break
    fi
done

subtitles=$subtitles1 || subtitles=$subtitles2 || subtitles=$subtitles3

printf "\n\n subtitles is $subtitles \n\n"

# subtiles="...:...:...:...:...:"
# --sub-files="$subtiles"
# --sub-file="$subtitle1" --sub-file="$subtitle2" --sub-file="$subtitle3" ...

if [[ -n "$subtitles" ]] ; then
    mpv --sub-files="$subtitles" "$1"
else
    mpv "$1"
fi
