#!/bin/bash

# mpv supports three subtitle options(exact, fuzzy, all)
# but not perfect.
# this is for a file with episodes like S01E01, E01

if [[ ! -e "$1" ]]; then
    printf "\nrequired first argument as file\n"
    exit 1
fi

match=0
filename="${1##*/}"
dir="${1%$filename}"
filename=$(echo "$filename" | awk '{print tolower($0)}')
episode=$(expr "$filename" : ".*\(s[0-9]\+e[0-9]\+\).*") || \
    episode=$(expr "$filename" : ".*\(e[0-9]\+\).*")
subext=".*\.(srt|smi|ass|sub)$"
printf "\nepisode is $episode\n"

if [[ -n "$dir" ]]; then
  cd "$dir"
fi

# filename = S01E01   subname = S01E01
#                               E01
# filename = S01.E01  subname = S01E01
#                               E01
# filename = E01      subname = E01
#                               S01E01

for file in *; do
    originfile="$file"
    file=$(echo "$file" | awk '{print tolower($0)}')
    if [[ "$file" =~ "$episode" && "$file" =~ "$subext" ]]; then
        (( match++ ))
        subtitle="$originfile"
        printf "\nsubtitle1 is $subtitle\n"
        # break
    elif [[ "$file" =~ e"${episode#*e}" && "$file" =~ "$subext" ]]; then
        (( match++ ))
        subtitle="$originfile"
        printf "\nsubtitle2 is $subtitle\n"
        # break
    fi
done

if [[ -n "$subtitle" && $match -eq 1 ]]; then
    mpv --sub-file="$dir""$subtitle" "$1"
else
    mpv "$1"
fi
