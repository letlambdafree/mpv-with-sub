#!/bin/bash

# mpv supports three subtitle options (exact, fuzzy, all)
# this is for a file with episodes like S01E01, E01, Series.1.Part.1

# filename = S01E01             subtitle = S01E01
#            S01.E01                       E01
#
# filename = E01                subtitle = E01
#                                          S01E01
#
# filename = Series.1.Part.1    subtitle = Series.1.Part.1
#                                          E01

# --sub-files="subtitle1:subtitle2:subtitle3"
# or
# --sub-file="$subtitle1" --sub-file="$subtitle2" --sub-file="$subtitle3"

if [[ ! -e "$1" ]] ; then
    printf "\n"
    printf "\n required first argument as file"
    printf "\n"
    exit 1
fi

PS3="Choose : "
filename="${1##*/}"
printf "\n"
printf "\n filename is $filename"
printf "\n"
filedir="${1%"$filename"}"
printf "\n"
printf "\n filedir is $filedir"
printf "\n"
filename=$(awk '{print tolower($0)}' <<< "$filename")

ep1=$(expr "$filename" : ".*\(s[0-9]\+\.\?e[0-9]\+\).*")
ep2=$(expr "$filename" : ".*\(e[0-9]\+\).*")
ep3=$(expr "$filename" : ".*\(series\.\?[0-9]\+\.\?part\.\?[0-9]\+\).*")
ep=$ep1 || ep=$ep2 || ep=$ep3

if [[ -z "$ep" ]] ; then
    mpv "$1"
    exit 0
fi

printf "\n"
printf "\n episode is $ep"
printf "\n"

subext=".*\.(srt|smi|ass|sub)$"

[[ -n "$filedir" ]] && cd "$filedir"

# for recursive directories
# probably need -2 deep level, otherwise so many files will be checked

shopt -s globstar
for file in **/* ; do
    originfile="$file"
    file=$(awk '{print tolower($0)}' <<< "$file")
    if [[ "$file" =~ $subext ]] ; then
        if [[ "$file" =~ $ep ]] ; then
            if [[ -z $subtitles1 ]] ; then
                subtitles1="$originfile"
            else
                subtitles1="$subtitles1":"$originfile"
            fi
            printf "\n"
            printf "\n subtitles1 is $subtitles1"
            printf "\n"
            # break
        elif [[ "$file" =~ e0*"${ep#*e}" ]] ; then
            if [[ -z $subtitles2 ]] ; then
                subtitles2="$originfile"
            else
                subtitles2="$subtitles2":"$originfile"
            fi
            printf "\n"
            printf "\n subtitles2 is $subtitles2"
            printf "\n"
            # break
        elif [[ "$file" =~ e0*"${ep#*part\.}" ]] ; then
            if [[ -z $subtitles3 ]] ; then
                subtitles3="$originfile"
            else
                subtitles3="$subtitles3":"$originfile"
            fi
            printf "\n"
            printf "\n subtitles3 is $subtitles3"
            printf "\n"
            # break
        fi
    fi
done

# s01e01 > e01 > series.1.part.1
subtitles="$subtitles1" || subtitles="$subtitles2" || subtitles="$subtitles3"

# all subtitles, s01e01 + e01 + series.1.part.1
# subtitles="$subtitles1":"$subtitles2":"$subtitles3"

printf "\n"
printf "\n subtitles is $subtitles"
printf "\n"

# when runs in terminal, activate select-loop
# to distinguish between emacs-dired and terminal from running script
if [[ "$2" != "--dired" ]] ; then
    subtitlelines=$(sed s/:/\\n/g <<< $subtitles)
    if (( $(wc -l <<< $subtitlelines) = 1 )) ; then
        selectedsubtitle="$subtitlelines"
    elif (( $(wc -l <<< $subtitlelines) > 1 )) ; then
        readarray -t arr_subtitles <<< "$subtitlelines"
        select subtitle in "${arr_subtitlelines[@]}" ; do
            if [[ $REPLY =~ ^("*"|"999")$ ]] ; then
                printf "\n"
                printf "\n You choose all subtitles. They'll be loaded."
                printf "\n To cycle through the available subtitles,"
                printf "\n press j and J."
                printf "\n"
                mpv --sub-files="$filedir""$subtitlelines" "$1"
                exit 0
            elif [[ $REPLY =~ ^("0")$ ]] ; then
                printf "\n"
                printf "\n You choose no subtitle."
                printf "\n Don't automatically load external subtitle files."
                printf "\n"
                mpv --sub-auto=no "$1"
                exit 0
            fi
            selectedsubtitle="$subtitle"
            break
        done
    fi
fi

if [[ -n $selectedsubtitle ]] ; then
    mpv --sub-file="$filedir""$selectedsubtitle" "$1"
elif [[ -n $subtitles ]] ; then
    mpv --sub-files="$filedir""$subtitles" "$1"
else
    mpv "$1"
fi
